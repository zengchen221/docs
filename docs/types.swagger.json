{
  "swagger": "2.0",
  "info": {
    "title": "types.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/arbitrageur/getConfigByName": {
      "get": {
        "operationId": "ArbitrageurAPI_GetConfigByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoArbitrageurConfig"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "robotName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ArbitrageurAPI"
        ]
      }
    },
    "/arbitrageur/setRobotByConfigs": {
      "post": {
        "operationId": "ArbitrageurAPI_SetRobotByConfigs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoArbitrageurConfigs"
            }
          }
        ],
        "tags": [
          "ArbitrageurAPI"
        ]
      }
    },
    "/arbitrageur/updateConfigByName": {
      "post": {
        "operationId": "ArbitrageurAPI_UpdateConfigByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoArbitrageurConfig"
            }
          }
        ],
        "tags": [
          "ArbitrageurAPI"
        ]
      }
    },
    "/mmHedge/getConfigByName": {
      "get": {
        "operationId": "MMHedgeAPI_GetConfigByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMMHedgeConfigs"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "robotName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MMHedgeAPI"
        ]
      }
    },
    "/mmHedge/setRobotByConfigs": {
      "post": {
        "operationId": "MMHedgeAPI_SetRobotByConfigs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMMHedgeConfigs"
            }
          }
        ],
        "tags": [
          "MMHedgeAPI"
        ]
      }
    },
    "/mmHedge/updateConfigByName": {
      "post": {
        "operationId": "MMHedgeAPI_UpdateConfigByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMMHedgeConfig"
            }
          }
        ],
        "tags": [
          "MMHedgeAPI"
        ]
      }
    },
    "/robot/debug": {
      "get": {
        "operationId": "RobotAPI_Debug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoString"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RobotAPI"
        ]
      }
    },
    "/robot/getAllRobot": {
      "get": {
        "operationId": "RobotAPI_GetAllRobot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRobotInfos"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "RobotAPI"
        ]
      }
    },
    "/robot/getRobotAccountInfo": {
      "get": {
        "operationId": "RobotAPI_GetRobotAccountInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRobotAccountInfos"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "robotName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RobotAPI"
        ]
      }
    },
    "/robot/restartRobotByName": {
      "post": {
        "operationId": "RobotAPI_RestartRobotByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRobotName"
            }
          }
        ],
        "tags": [
          "RobotAPI"
        ]
      }
    },
    "/robot/startRobotByName": {
      "post": {
        "operationId": "RobotAPI_StartRobotByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRobotName"
            }
          }
        ],
        "tags": [
          "RobotAPI"
        ]
      }
    },
    "/robot/stopRobotByName": {
      "post": {
        "operationId": "RobotAPI_StopRobotByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBoolean"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRobotName"
            }
          }
        ],
        "tags": [
          "RobotAPI"
        ]
      }
    }
  },
  "definitions": {
    "protoArbitrageurConfig": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string"
        },
        "robotName": {
          "type": "string"
        },
        "preflightCheck": {
          "$ref": "#/definitions/protoArbitrageurPreflightCheck"
        },
        "arbitrageurExchangeConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoArbitrageurExchangeConfig"
          }
        }
      }
    },
    "protoArbitrageurConfigs": {
      "type": "object",
      "properties": {
        "ArbitrageurConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoArbitrageurConfig"
          }
        }
      }
    },
    "protoArbitrageurExchangeConfig": {
      "type": "object",
      "properties": {
        "Pair": {
          "type": "string"
        },
        "ENABLED": {
          "type": "boolean",
          "format": "boolean"
        },
        "ASSET_CAP": {
          "type": "integer",
          "format": "int32"
        },
        "SAKEPERP_LEVERAGE": {
          "type": "integer",
          "format": "int32"
        },
        "SAKEPERP_MIN_TRADE_NOTIONAL": {
          "type": "integer",
          "format": "int32"
        },
        "SAKEPERP_LONG_ENTRY_TRIGGER": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_LONG_CLOSE_TRIGGER": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_LONG_OPEN_PRICE_SPREAD": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_LONG_CEX_OPEN_PRICE_SPREAD": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_SHORT_ENTRY_TRIGGER": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_SHORT_CLOSE_TRIGGER": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_SHORT_OPEN_PRICE_SPREAD": {
          "type": "number",
          "format": "float"
        },
        "SAKEPERP_SHORT_CEX_OPEN_PRICE_SPREAD": {
          "type": "number",
          "format": "float"
        },
        "ADJUST_MARGIN_RATIO_THRESHOLD": {
          "type": "number",
          "format": "float"
        },
        "MAX_SLIPPAGE_RATIO": {
          "type": "number",
          "format": "float"
        },
        "CEX_MARKET_ID": {
          "type": "string"
        },
        "CEX_MIN_TRADE_SIZE": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "protoArbitrageurPreflightCheck": {
      "type": "object",
      "properties": {
        "BLOCK_TIMESTAMP_FRESHNESS_THRESHOLD": {
          "type": "integer",
          "format": "int32"
        },
        "GAS_BALANCE_THRESHOLD": {
          "type": "integer",
          "format": "int32"
        },
        "USD_BALANCE_THRESHOLD": {
          "type": "integer",
          "format": "int32"
        },
        "CEX_USD_BALANCE_THRESHOLD": {
          "type": "integer",
          "format": "int32"
        },
        "CEX_MARGIN_RATIO_THRESHOLD": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "protoBoolean": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "protoMMHedgeConfig": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "string"
        },
        "robotName": {
          "type": "string"
        },
        "preflightCheck": {
          "$ref": "#/definitions/protoMMHedgePreflightCheck"
        },
        "mmHedgeExchangeConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoMMHedgeExchangeConfig"
          }
        }
      }
    },
    "protoMMHedgeConfigs": {
      "type": "object",
      "properties": {
        "mmHedgeConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoMMHedgeConfig"
          }
        }
      }
    },
    "protoMMHedgeExchangeConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "symbol": {
          "type": "string"
        },
        "cexMarketId": {
          "type": "string"
        },
        "hedgeRatio": {
          "type": "string"
        },
        "precision": {
          "type": "integer",
          "format": "int32"
        },
        "pricePrecision": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoMMHedgePreflightCheck": {
      "type": "object",
      "properties": {
        "bscUrl": {
          "type": "string"
        },
        "hedgeInterval": {
          "type": "integer",
          "format": "int32"
        },
        "positionChangedInterval": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoRobotAccountInfo": {
      "type": "object",
      "properties": {
        "robotName": {
          "type": "string"
        },
        "cexAvailableBalance": {
          "type": "number",
          "format": "float"
        },
        "cexTotalBalance": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "protoRobotAccountInfos": {
      "type": "object",
      "properties": {
        "infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoRobotAccountInfo"
          }
        }
      }
    },
    "protoRobotInfo": {
      "type": "object",
      "properties": {
        "robotType": {
          "type": "string"
        },
        "robotName": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "createTime": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cexPlatform": {
          "type": "string"
        },
        "dexPlatform": {
          "type": "string"
        },
        "dexAddress": {
          "type": "string"
        }
      }
    },
    "protoRobotInfos": {
      "type": "object",
      "properties": {
        "robots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoRobotInfo"
          }
        }
      }
    },
    "protoRobotName": {
      "type": "object",
      "properties": {
        "robotName": {
          "type": "string"
        }
      }
    },
    "protoString": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
